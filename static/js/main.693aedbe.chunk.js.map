{"version":3,"sources":["message.js","constants.js","navbar.js","room.js","profile.js","login.js","App.js","reportWebVitals.js","index.js"],"names":["Message","this","props","message","email","isOwnMessage","author","ListGroup","Item","style","styles","container","body","React","Component","maxWidth","borderRadius","padding","color","fontSize","backgroundColor","float","flexDirection","timestamp","textAlign","paddingTop","config","url","API_URL","Navbar","pushEmail","location","state","history","replace","bind","Row","Col","xs","md","to","Button","variant","onClick","Chat","require","Room","componentDidMount","a","room","token","getToken","Error","Client","create","client","on","updateToken","channel","getMessages","messages","setState","items","getChannelByUniqueName","joinChannel","createChannel","uniqueName","friendlyName","axios","get","result","data","console","log","channelState","status","join","loading","handleMessageAdded","sendMessage","text","String","trim","Card","Header","Body","map","index","required","placeholder","rows","value","disabled","onChange","event","target","type","display","width","Profile","info","newroom","window","reload","getUserInfo","alert","name","channels","created","handleChange","createjoin","push","Container","label","Login","login","button","className","marginRight","marginLeft","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.693aedbe.chunk.js","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport ListGroup from 'react-bootstrap/ListGroup';\n\n\nclass Message extends React.Component {\n\n\n  render() {\n    const { message, email } = this.props;\n    const isOwnMessage = message.author === email;\n\n    return (\n        <ListGroup.Item >\n            <div style={styles.container(isOwnMessage)}>\n                {message.body}\n                <div style={styles.author(isOwnMessage)}>{message.author}</div>\n                {/* <div style={styles.timestamp}> */}\n                {/*     {new Date(message.dateCreated.toISOString()).toLocaleString()} */}\n                {/* </div> */}\n            </div>\n        </ListGroup.Item>\n    );\n  }\n}\n\nconst styles = {\n\n  container: (isOwnMessage) => ({\n    maxWidth: \"100%\",\n    //width: \"100%\",\n    borderRadius: 12,\n    padding: 8,\n    color: \"white\",\n    fontSize: 14,\n    backgroundColor: isOwnMessage ? \"grey\" : \"blue\",\n    float: isOwnMessage ? \"right\" : \"left\",\n  }),\n    author: (isOwnMessage) =>({\n        flexDirection: \"column\",\n        fontSize: 8,\n //       float: isOwnMessage ? \"right\" : \"left\",\n        color: \"white\",\n  }),\n  timestamp: { fontSize: 8, color: \"white\", textAlign: \"right\", paddingTop: 4 },\n};\n\nexport default Message;\n","const prod = {\n url: {\n  API_URL: 'https://www.iwantadomainplz.com',\n    }\n}\nconst dev = {\n url: {\n  API_URL: 'http://localhost:5000'\n }\n}\n\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;\n\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n\n\nclass Navbar extends React.Component {\n    constructor(props) {\n\n        super(props)\n        this.state = {email: this.email}\n        this.pushEmail = this.pushEmail.bind(this)\n    }\n\n    pushEmail = () => {\n        const { location } = this.props\n        const { state } = location || {}\n        const { email } = state || {}\n        this.props.history.replace(\"/profile\", {email})\n    }\n\n    render(){\n        const { location } = this.props\n        const { state } = location || {}\n        const { email } = state || {}\n        if(email){\n            return (<>\n                <br></br>\n                <Row>\n                    <Col  xs={8} md={2} >\n                        <Link to=\"/login\">Logout</Link>\n                    </Col>\n                    <Col  xs={8} md={2} >\n                        <Button variant=\"link\" onClick={this.pushEmail} to=\"/profile\">Profile</Button>\n                    </Col>\n                </Row>\n                <hr />\n            </>)\n\n        }else{\n            return (<>\n                    <br></br>\n                    <Row>\n                        <Col  xs={8} md={2} >\n                        <Link to=\"/login\">Login</Link>\n                        </Col>\n                        <Col  xs={8} md={2} >\n                        <Link to=\"/profile\">Profile</Link>\n                        </Col>\n                    </Row>\n                    <hr />\n                </>)\n        }\n    }\n\n}\n\nexport default Navbar\n\n","import React from \"react\"\nimport axios from \"axios\"\nimport Message from \"./message\"\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Container from 'react-bootstrap/ListGroup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {config} from './constants'\nimport Navbar from './navbar'\nconst Chat = require(\"twilio-chat\")\n\nclass Room extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            text: \"\",\n            messages: [],\n            loading: false,\n            channel: null,\n        }\n\n    }\n\n    componentDidMount = async () => {\n        const { location } = this.props\n        const { state } = location || {}\n        const { email, room } = state || {}\n\n        //validation\n\n        if (!email || !room) {\n            this.props.history.replace(\"/\")\n        }\n\n        //token stuff\n        //token stuff\n        let token = ''\n\n        try {\n            token = await this.getToken(email)\n        } catch {\n            throw new Error(\"cant get token\")\n        }\n\n        const client = await Chat.Client.create(token)\n\n        client.on(\"tokenAboutToExpire\", async () => {\n            const token = await this.getToken(email)\n            client.updateToken(token)\n        })\n\n        client.on(\"tokenExpired\", async () => {\n            const token = await this.getToken(email)\n            client.updateToken(token)\n        })\n\n        client.on(\"channelJoined\", async (channel) => {\n            const messages = await channel.getMessages()\n            this.setState({ messages: messages.items || [] })\n        })\n\n        try {\n            const channel = await client.getChannelByUniqueName(room)\n            this.joinChannel(channel)\n        } catch(err) {\n            try {\n                const channel = await client.createChannel({\n                    uniqueName: room,\n                    friendlyName: room,\n                })\n                this.joinChannel(channel)\n            } catch {\n                throw new Error(\"cant create a channel\")\n            }\n        }\n    }\n\n    getToken = async (email) => {\n        const result = await axios.get(`${config.url.API_URL}/token/${email}`)\n        const { data } = result\n        console.log(`we request from this domoain: ${config.url.API_URL}`)\n        return data.token\n    }\n\n    joinChannel = async (channel) => {\n        if (channel.channelState.status !== \"joined\") {\n            await channel.join()\n        }\n\n        this.setState({\n            channel:channel,\n            loading: false\n        })\n\n        channel.on(\"messageAdded\", this.handleMessageAdded)\n    }\n\n\n    handleMessageAdded = (message) => {\n        const { messages } = this.state\n        this.setState({\n            messages: [...messages, message],\n        },\n        )\n    }\n\n\n    sendMessage = () => {\n        const { text, channel } = this.state\n        if (text) {\n            this.setState({ loading: true })\n            channel.sendMessage(String(text).trim())\n            this.setState({ text: \"\", loading: false })\n        }\n    }\n\n    render() {\n      const { loading, text, messages, channel } = this.state\n      const { location } = this.props\n      const { state } = location || {}\n      const { email, room } = state || {}\n\n      return (\n        <>\n            <Navbar {...this.props}/>\n        <Container>\n            <Card>\n                <Card.Header>\n                    {`Room: ${room}, User: ${email}`}\n                </Card.Header>\n\n                <Card.Body>\n                    <Container >\n                        <ListGroup>{messages && messages.map((message) =>\n                        <Message\n                                key={message.index}\n                                message={message}\n                                email={email}/>\n                        )}</ListGroup>\n                    </Container>\n\n                    <Row>\n                        <Col  xs={12} md={8} >\n                            <input  required\n                        style={styles.message}\n                        placeholder=\"Enter message\"\n                        variant=\"outlined\"\n                        rows={2}\n                        value={text}\n                        disabled={!channel}\n                        onChange={(event) =>\n                          this.setState({ text: event.target.value })\n                        }/>\n                        </Col>\n                        <Col  xs={6} md={4} >\n                        <input\n                            variant=\"primary\"\n                            value=\"send\"\n                            type=\"button\"\n                        style={styles.message}\n                            onClick={this.sendMessage}\n                            disabled={!channel}\n                        />\n                        </Col>\n\n\n                    </Row>\n                </Card.Body>\n            </Card>\n        </Container>\n        </>\n      )\n    }\n}\n\nconst styles = {\n    message: {display: \"block\", width: \"100%\", borderRadius: 12, padding: -4}\n\n};\n\nexport default Room\n","import React from \"react\"\nimport axios from \"axios\"\n//import Message from \"./message\"\n//import Card from 'react-bootstrap/Card';\n//import Row from 'react-bootstrap/Row';\n//import Col from 'react-bootstrap/Col';\n//import ListGroup from 'react-bootstrap/ListGroup';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {config} from './constants'\nimport Navbar from './navbar'\nconst Chat = require(\"twilio-chat\")\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            channels: '',\n            created: '',\n            room: '',\n            newroom: '',\n        }\n\n\n    }\n\n    componentDidMount = async () => {\n        const { location } = this.props;\n        const { state } = location || {};\n        const { email, room } = state || {};\n        let token = \"\";\n        let info = ''\n        let newroom = ''\n        let name = ''\n\n\n        if (!email) {\n            this.props.history.replace(\"/login\");\n        }\n\n        try {\n            token = await this.getToken(email)\n        } catch {\n            window.location.reload();\n            throw new Error(\"cant get token\")\n        }\n\n        const client = await Chat.Client.create(token)\n\n\n        client.on(\"tokenAboutToExpire\", async () => {\n            const token = await this.getToken(email)\n            client.updateToken(token)\n        })\n\n        client.on(\"tokenExpired\", async () => {\n            const token = await this.getToken(email)\n            client.updateToken(token)\n        })\n\n\n        try {\n            info = await this.getUserInfo(email)\n        } catch {\n            window.location.reload();\n        }\n        try {\n            newroom = await axios.get(`${config.url.API_URL}/random`)\n            this.setState({room: newroom.data})\n        } catch{\n            alert(\"cannot make room\")\n        }\n        this.setState({name: email, channels: info.channels, created: info.created,\n            newroom: newroom.data})\n\n\n\n\n    }\n\n    getToken = async (email) => {\n        const result = await axios.get(`${config.url.API_URL}/token/${email}`)\n        const { data } = result\n        return data.token\n    }\n\n    getUserInfo = async (email) => {\n        const result = await axios.get(`${config.url.API_URL}/user/${email}`)\n        const { data } = result\n        return data\n    }\n\n\n    handleChange = (event) => {\n        this.setState({room:event.target.value})\n    };\n\n\n    createjoin = () => {\n        const { location } = this.props;\n        const { state } = location || {};\n        const { email } = state || {};\n        const { room } = this.state;\n        console.log(this.props.history)\n        if (email && room) {\n            this.props.history.push(\"chat\", { room, email });\n        }\n    }\n\n\n\n    render() {\n        return (\n        <>\n        <Navbar {...this.props}/>\n        <Container>\n            <Card>\n                <Card.Header>\n                    You Are: {this.state.name}\n                    <br/>\n                    You are in {this.state.channels} channels\n                    <br/>\n                    You were born at {this.state.created}\n                </Card.Header>\n                <Card.Body>\n                    <Card>\n                        <Card.Header>\n                            Join A Channel\n                        </Card.Header>\n                        <Card.Body>\n                             <input\n                                name=\"room\"\n                                 required\n                                 label=\"Room\"\n                                 placeholder=\"Enter room name\"\n                                 variant=\"outlined\"\n                                 value={this.state.room}\n                                 onChange={this.handleChange}/>\n\n                            <br></br>\n                            <br></br>\n                            <Button variant=\"primary\" onClick={this.createjoin}>Create/Join</Button>\n\n                        </Card.Body>\n\n                    </Card>\n                </Card.Body>\n            </Card>\n        </Container>\n        </>\n        )\n    }\n}\n\nexport default Profile\n","import React from \"react\"\n//import axios from \"axios\"\n//import Message from \"./message\"\nimport Card from 'react-bootstrap/Card';\n//import Row from 'react-bootstrap/Row';\n//import Col from 'react-bootstrap/Col';\n//import ListGroup from 'react-bootstrap/ListGroup';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import {config} from './constants'\n//const Chat = require(\"twilio-chat\")\n//\nimport Navbar from './navbar'\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: \"\",\n        }\n\n    }\n\n\n    login = () => {\n        //console.log(this.props)\n        const email = this.state.email;\n        console.log(email)\n        if (email !== '') {\n            this.props.history.push(\"/profile\", {email});\n        }\n    }\n\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n\n    render(){\n        const email  = this.state.email;\n        return (\n        <>\n        <Navbar {...this.props}/>\n        <Container>\n            <Card>\n                <Card.Header>\n                    Login or Register Account\n                </Card.Header>\n\n                <Card.Body>\n                    <input\n                        name=\"email\"\n                        required\n                        label=\"Email address\"\n                        placeholder=\"Enter email address\"\n                        variant=\"outlined\"\n                        type={email}\n                        onChange={this.handleChange}\n                    />\n                    <br></br>\n                    <br></br>\n                    <Button\n                        style={styles.button}\n                        className=\"btn-primary\"\n                        variant=\"primary\"\n                        onClick={this.login}\n                    >Login</Button>\n                </Card.Body>\n            </Card>\n        </Container>\n\n        </>\n            )\n    }\n}\n\nconst styles = {\n    button: {\n        display: \"flex\",\n        marginRight: \"auto\",\n        marginLeft: \"auto\",\n    }\n}\n\n\nexport default Login\n","import './App.css';\nimport {Redirect, Route, Switch, BrowserRouter} from 'react-router-dom'\nimport Room from \"./room\";\nimport Profile from './profile'\nimport Login from './login'\n\n\n\nfunction App() {\n  return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/login\" component={Login}/>\n                    <Route path=\"/chat\" component={Room}/>\n                    <Route path=\"/profile\" component={Profile}/>\n                    {/* <Route exact path=\"/\">{<Redirect to=\"/login\" />}</Route> */}\n                </Switch>\n            </BrowserRouter>\n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//<BrowserRouter><App/></BrowserRouter>\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}